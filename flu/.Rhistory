library(leaflet)
library(RColorBrewer)
library(maps)
library(ggplot2)
library(rgdal)
library(leafletR)
library(rgeos) #for simplification
library(sp)
library(ggmap)
require(shiny)
require(rCharts)
#####
# READ IN GEOCODED SCHOOL DATA
#####
schools <- read.csv("schools.csv")
pedLevels <- c(5,20,40,60,80)
directCosts <- c(203,111,49,28,21)
medicaidDirectCosts <- directCosts*.16
nonMedicaidDirectCosts <- directCosts - medicaidDirectCosts
medicaidDirectCostsFed <- medicaidDirectCosts*.5
medicaidDirectCostsFl <- medicaidDirectCosts*.5
plot(pedLevels, medicaidDirectCosts,
xlim=c(0,80), xlab="Pediatric immunization rate", ylab="Dollars (in millions)")
my4cols <- adjustcolor(c("darkred", "darkblue", "darkgreen"), alpha.f=0.5)
my4labels <- c("Direct Medicaid costs (paid by Florida)",
"Direct Medicaid costs (paid by federal government)",
"Direct non-Medicaid costs")
polygonFun <- function(time, poly1, poly2, poly3){
mm <- c(time, rev(time))
poly1a <- c(rep(0, length(time)), rev(poly1))
poly2a <- c(rep(0, length(time)), rev(poly2))
poly3a <- c(rep(0, length(time)), rev(poly3))
aa <- c(poly1, rev(poly1))
bb <- c(poly2+poly1, rev(poly1))
cc <- c(poly3+poly2+poly1, rev(poly2+poly1))
plot(time, poly1, xaxt="n", type="n", ylim=c(0,max(cc, na.rm=TRUE)),
xlab=("Pediatric immunization rate (%)"), ylab="Dollars (in millions)",
main="Reduction in annual direct costs (by pay source)")
axis(side=1, at=time, labels=time,
tick=FALSE, line=0, cex=0.6)
polygon(mm, poly1a, col=my4cols[1], border=NA)
polygon(mm, bb, col=my4cols[2], border=NA)
polygon(mm, cc, col=my4cols[3], border=NA)
legend(x="topright", fill=rev(my4cols),
legend=rev(my4labels),
border=FALSE, bty="n", cex=0.85)
abline(h=seq(0,200,25), col=adjustcolor("black", alpha.f=0.2))
abline(v=c(5,20,40,60,80), col=adjustcolor("black", alpha.f=0.2))
}
polygonFun(time= pedLevels,
poly1= medicaidDirectCostsFl,
poly2= medicaidDirectCostsFed,
poly3= nonMedicaidDirectCosts)
par(mar=c(4,5,2,1))
############### EXCLUDING PRIVATE
my4cols <- adjustcolor(c("darkred", "darkblue"), alpha.f=0.5)
my4labels <- c("Medicaid costs paid by Florida",
"Total Medicaid costs for Florida")
polygonFun <- function(time, poly1, poly2){
mm <- c(time, rev(time))
poly1a <- c(rep(0, length(time)), rev(poly1))
poly2a <- c(rep(0, length(time)), rev(poly2))
aa <- c(poly1, rev(poly1))
bb <- c(poly2+poly1, rev(poly1))
plot(time, poly1, xaxt="n", type="n", ylim=c(0,max(bb, na.rm=TRUE)),
xlab=("Pediatric immunization rate (%)"), ylab="Dollars (in millions)",
main="Reduction in annual Medicaid costs", cex.axis=1.6,
cex.lab=1.4)
axis(side=1, at=time, labels=time,
tick=FALSE, line=0, cex.axis=1.5)
polygon(mm, poly1a, col=my4cols[1], border=NA)
polygon(mm, bb, col=my4cols[2], border=NA)
legend(x="topright", fill=rev(my4cols),
legend=rev(my4labels),
border=FALSE, bty="n", cex=1.4)
abline(h=seq(0,200,5), col=adjustcolor("black", alpha.f=0.2))
abline(v=c(5,20,40,60,80), col=adjustcolor("black", alpha.f=0.2))
}
polygonFun(time= pedLevels,
poly1= medicaidDirectCostsFl,
poly2= medicaidDirectCostsFed)
library(Hmisc)
library(dplyr)
###
# set working directory (this is a conditional depending on whose computer is being used)
###
if ( Sys.info()["sysname"] == "Linux" ){
public <- "/home/joebrew/Documents/benbrew/flu"
private <- "/media/joebrew/JB/fdoh/private/ben"
} else if(Sys.info()["user"] == "BrewJR" ){
public <- "C:/Users/BrewJR/Documents/benbrew/flu"
private <- "E:/fdoh/private/ben"
} else if (Sys.info()["user"] == "Ben"){
public <- "C:/Users/Ben/Documents/benbrew/flu"
private <- "C:/Users/Ben/Documents/private/"
} else{
private <- "C:/Users/Laila/Desktop/R"
public <- "C:/Users/Laila/Desktop/R"
}
setwd(public)
###
# read in private data (private, stored in private directory)
###
setwd(private)
dat <- read.csv("obesity_flu_absences_merged2.csv") #2 is the version ben fixed with school grades
# ###
# # Clean up school grades
# ###
# dat$school_grade_2011 <- as.character(dat$X2011grade)
# dat$school_grade_2012 <- as.character(dat$X2012grade)
# dat$school_grade_2013 <- as.character(dat$X2013grade)
#
# dat$school_grade <- NA
# dat$school_grade[which(dat$year == 2011)] <- dat$school_grade_2011[which(dat$year == 2011)]
# dat$school_grade[which(dat$year == 2012)] <- dat$school_grade_2012[which(dat$year == 2012)]
# dat$school_grade[which(dat$year == 2013)] <- dat$school_grade_2013[which(dat$year == 2013)]
#
# #eliminate spaces
# dat$school_grade <- gsub(" ", "", dat$school_grade)
#
# # eliminate extra variables
# dat$school.1 <- NULL
# dat$X2011grade <- NULL
# dat$X2012grade <- NULL
# dat$X2013grade <- NULL
# dat$school_grade_2011 <- NULL
# dat$school_grade_2012 <- NULL
# dat$school_grade_2013 <- NULL
#
# # write csv
# write.csv(dat, "obesity_flu_absences_merged2.csv")
###
# SUMMARIZE ABSENTEEISM BY GRADE
###
head(dat)
table(dat$school_grade)
df_grade <- dat %>%
group_by(grade) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_grade$fsar <-
df_grade$absences /
df_grade$flu_days * 100
df_year <- dat %>%
group_by(year) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_year$fsar <-
df_year$absences /
df_year$flu_days * 100
df_year
barplot(df_year$fsar)
barplot(df_year$fsar, names.arg = df_year$year)
table(dat$v)
prop.table(table(dat$v))
df_v <- dat %>%
group_by(year) %>%
summarise(v_rate= length(v[which(dat$v == "Yes")]) /
length(v))
df_v
df_v <- dat %>%
group_by(year) %>%
summarise(v_rate= length(v[which(v == "Yes")]) /
length(v))
df_v
df_v <- dat %>%
group_by(year) %>%
summarise(v_rate= length(v[which(v == "Yes")]) /
length(v[which(!is.na(v))]))
df_v
barplot(df_v$v_rate, names.arg = df_v$year)
?ttest
?t.test
dat$fsar
head(dat)
x <- dat$fsar[which(dat$v == "Yes")]
x <- dat$ab_flu_per[which(dat$v == "Yes")]
y <- dat$ab_flu_per[which(dat$v == "No")]
t.test(x, y)
0.05635277 - 0.04402043
0.05635277 / 0.04402043
0.04402043 / 0.05635277
fit <- glm(v == "Yes" ~
race,
data = dat,
family = binomial("logit"))
summary(fit)
exp(coef(fit))
fit <- glm(v == "Yes" ~
lunch,
data = dat,
family = binomial("logit"))
summary(fit)
exp(coef(fit))
head(dat)
fit <- glm(v == "Yes" ~
lunch_rec,
data = dat,
family = binomial("logit"))
summary(fit)
exp(coef(fit))
table(dat$cat)
prop.table(dat$cat)
prop.table(table(dat$cat))
hist(dat$z)
summary(dat$z)
summary(dat$bmi_percentile_for_age)
hist(dat$bmi_percentile_for_age)
hist(dat$z)
hist(dat$z,
col = "lightblue",
main = "Histogram of BMI Z score for age",
xlab = "Z-score")
barplot(prop.table(table(dat$cat)))
barplot(prop.table(table(dat$cat)),
col = "lightblue")
df_fat <- dat %>%
group_by(fat) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_fat$fsar <-
df_fat$absences /
df_fat$flu_days * 100
df_fat <- dat %>%
group_by(cat) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_fat$fsar <-
df_fat$absences /
df_fat$flu_days * 100
df_fat
summary(dat$cat)
str(dat$cat)
setwd(public)
###
# SOURCE SOME FUNCTIONS
###
source("functions.R")
head(dat)
dat$cat <- factor(dat$cat,
levels = c("normal",
"overweight",
"obese"))
df_fat <- dat %>%
group_by(cat) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_fat$fsar <-
df_fat$absences /
df_fat$flu_days * 100
df_fat
barplot(prop.table(table(dat$cat)),
col = "lightblue")
barplot(df_fat$fsar,
names.arg = df_fat$cat,
col = "lightblue")
bp <- barplot(df_fat$fsar,
names.arg = df_fat$cat,
col = "lightblue")
# RACE
###
df_race <- dat %>%
group_by(race) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_race$fsar <-
df_race$absences /
df_race$flu_days * 100
df_race
barplot(df_race$fsar, names.arg = df_race$race)
df_race <- df_race[order(df_race$race),]
df_race <- df_race[order(df_race$fsar),]
barplot(df_race$fsar, names.arg = df_race$race)
my_colors <- colorRampPalette(c("blue", "red"))(nrow(df_race))
barplot(df_race$fsar, names.arg = df_race$race,
col = my_colors)
bp <- barplot(df_race$fsar, names.arg = df_race$race,
col = my_colors)
simpasym(n = df_race$flu_days,
p = df_race$fsar / 100)
df_race$lb <-
simpasym(n = df_race$flu_days,
p = df_race$fsar / 100)$lb * 100
df_race
df_race$ub <-
simpasym(n = df_race$flu_days,
p = df_race$fsar / 100)$ub * 100
df_race
###
df_race <- dat %>%
group_by(race) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_race$fsar <-
df_race$absences /
df_race$flu_days * 100
# add ci
df_race$lb <-
simpasym(n = df_race$flu_days,
p = df_race$fsar / 100)$lb * 100
df_race$ub <-
simpasym(n = df_race$flu_days,
p = df_race$fsar / 100)$ub * 100
# order it
df_race <- df_race[order(df_race$fsar),]
df_race
# plot it
bar_fun(var = df_race$fsar,
names.arg = df_race$race,
xlab = "Race",
ylab = "Flu season absenteeism rate",
add_ci = TRUE,
yplus = df_race$ub,
yminus = df_race$lb)
df_race$fsar
df_race <- df_race[which(!is.na(df$race_fsar)),]
bar_fun(var = df_race$fsar,
df_race <- df_race[which(!is.na(df_race$fsar)),]
df_race <- df_race[which(!is.na(df_race$fsar)),]
bar_fun(var = df_race$fsar,
names.arg = df_race$race,
xlab = "Race",
ylab = "Flu season absenteeism rate",
add_ci = TRUE,
yplus = df_race$ub,
yminus = df_race$lb)
df_race
bar_fun(var = df_race$fsar,
names.arg = c("Asian",
"Indian",
"White",
"Hispanic",
"Multiracial",
"Black"), #df_race$race,
xlab = "Race",
ylab = "Flu season absenteeism rate",
add_ci = TRUE,
yplus = df_race$ub,
yminus = df_race$lb)
summary(dat$race)
dat$race <- factor(dat$race,
levels=c("W", "A",
"I","H", "M", "B"))
summary(dat$race)
fit <- glm(fsar ~
race,
data=dat,
family=binomial("logit"))
fit <- glm(cbind(dat$ab_flu, dat$pres_flu) ~
race,
data=dat,
family=binomial("logit"))
summary(fit)
df_race
head(dat)
df_lunch_rec <- dat %>%
group_by(lunch_rec) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_lunch_rec$fsar <-
df_lunch_rec$absences /
df_lunch_rec$flu_days * 100
# add ci
df_lunch_rec$lb <-
simpasym(n = df_lunch_rec$flu_days,
p = df_lunch_rec$fsar / 100)$lb * 100
df_lunch_rec$ub <-
simpasym(n = df_lunch_rec$flu_days,
p = df_lunch_rec$fsar / 100)$ub * 100
df_lunch_rec
# plot it
df_lunch_rec <- df_lunch_rec[which(!is.na(df_lunch_rec$fsar)),]
bar_fun(var = df_lunch_rec$fsar,
names.arg = df_lunch_rec$lunch_rec,
xlab = "Free/reduced lunch status",
ylab = "Flu season absenteeism rate",
add_ci = TRUE,
yplus = df_lunch_rec$ub,
yminus = df_lunch_rec$lb)
df_lunch_rec <- df_lunch_rec[which(!is.na(df_lunch_rec$lunch_rec)),]
bar_fun(var = df_lunch_rec$fsar,
names.arg = df_lunch_rec$lunch_rec,
xlab = "Free/reduced lunch status",
ylab = "Flu season absenteeism rate",
add_ci = TRUE,
yplus = df_lunch_rec$ub,
yminus = df_lunch_rec$lb)
str(dat$grade)
dat$grade <- factor(dat$grade)
df_grade <- dat %>%
group_by(grade) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_grade$fsar <-
df_grade$absences /
df_grade$flu_days * 100
# add ci
df_grade$lb <-
simpasym(n = df_grade$flu_days,
p = df_grade$fsar / 100)$lb * 100
df_grade$ub <-
simpasym(n = df_grade$flu_days,
p = df_grade$fsar / 100)$ub * 100
# plot it
df_grade <- df_grade[which(!is.na(df_grade$grade)),]
bar_fun(var = df_grade$fsar,
names.arg = df_grade$grade,
xlab = "Grade",
ylab = "Flu season absenteeism rate",
add_ci = TRUE,
yplus = df_grade$ub,
yminus = df_grade$lb)
df_race
df_race <- dat %>%
group_by(race) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
people = n(),
flu_days = sum(flu_days, na.rm = T))
df_race
summary(dat)
names(dat)
sum(dat$ab_flu)
sum(dat$ab_flu, na.rm = T)
sum(dat$pres_flu, na.rm = T)
summary(dat$race)
summary(dat$lunch_rec)
summary(dat$year)
table(dat$year)
table(dat$grade)
table(dat$schol_grade)
table(dat$school_grade)
names(dat)
sum(dat$ab_non_flu, na.rm = T)
sum(dat$ab_flu, na.rm = T)
summary(dat)
###
df_school_grade <- dat %>%
group_by(school_grade) %>%
summarise(absences = sum(ab_flu, na.rm = T),
presences = sum(pres_flu, na.rm = T),
flu_days = sum(flu_days, na.rm = T))
df_school_grade$fsar <-
df_school_grade$absences /
df_school_grade$flu_days * 100
# add ci
df_school_grade$lb <-
simpasym(n = df_school_grade$flu_days,
p = df_school_grade$fsar / 100)$lb * 100
df_school_grade$ub <-
simpasym(n = df_school_grade$flu_days,
p = df_school_grade$fsar / 100)$ub * 100
# plot it
df_school_grade <- df_school_grade[which(!is.na(df_school_grade$school_grade)),]
bar_fun(var = df_school_grade$fsar,
names.arg = df_school_grade$school_grade,
xlab = "School grade",
ylab = "Flu season absenteeism rate",
add_ci = TRUE,
yplus = df_school_grade$ub,
yminus = df_school_grade$lb)
plot(dat$ab_flu_per, dat$ab_non_flu_per)
plot(dat$ab_flu_per, jitter(dat$ab_non_flu_per, factor = 20))
plot(jitter(dat$ab_flu_per, factor = 200), jitter(dat$ab_non_flu_per, factor = 200))
plot(dat$ab_flu_per, dat$ab_non_flu_per)
# jitter to make more visible
plot(jitter(dat$ab_flu_per, factor = 200),
jitter(dat$ab_non_flu_per, factor = 200))
plot(jitter(dat$ab_flu_per, factor = 200),
jitter(dat$ab_non_flu_per, factor = 200),
col = adjustcolor("lightblue",
alpha.f = 0.2))
plot(jitter(dat$ab_flu_per, factor = 200),
jitter(dat$ab_non_flu_per, factor = 200),
col = adjustcolor("lightblue",
alpha.f = 0.2),
pch = 16)
fit <- lm(ab_non_flu_per ~
ab_flu_per,
data = dat)
abline(fit)
plot(jitter(dat$ab_flu_per, factor = 200),
jitter(dat$ab_non_flu_per, factor = 200),
col = adjustcolor("lightblue",
alpha.f = 0.2),
pch = 16,
xlab = "Flu season absenteeism rate",
ylab = "Non flu season absenteeism rate")
fit <- lm(ab_non_flu_per ~
ab_flu_per,
data = dat)
abline(fit,
lwd = 2,
col = adjustcolor("darkred", alpha.f = 0.6))
summary(fit)
df_lunch_rec <- df_lunch_rec[which(!is.na(df_lunch_rec$lunch_rec)),]
bar_fun(var = df_lunch_rec$fsar,
names.arg = df_lunch_rec$lunch_rec,
xlab = "Free/reduced lunch status",
ylab = "Flu season absenteeism rate",
add_ci = TRUE,
yplus = df_lunch_rec$ub,
yminus = df_lunch_rec$lb)
