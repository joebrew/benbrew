area.under.curve <- auc(x = auc.x,
y = auc.y)
}
###### !!!!!!!!!!!!!!!!
if(tree){
x <- predict(model, test.data, type="prob")
x <- as.numeric(x[,2])
} else{
x <- predict(model, test.data, type="response")
}
if(type == "cont"){
if(!is.null(threshold)){
############ THRESHOLD
test.data$g5.predicted <- ifelse(x > threshold, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
} else{
test.data$g5.predicted <- ifelse(x > 5, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
}
truth.table <- table(test.data[,"g5.predicted"], test.data[,"g5.observed"])
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.true")])
false.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.false")])
false.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.true")])
true.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
false.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
true.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
false.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
true.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
cat(paste0("Sensitivity: ", round(sensitivity, digits=2)), "\n")
cat(paste0("Specificity: ", round(specificity, digits=2)), "\n\n")
cat(paste0("PPV: ", round(ppv, digits=2)), "\n")
cat(paste0("NPV: ", round(npv, digits =2)), "\n\n")
cat(paste0("True positive rate: ", round(true.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("True negative rate: ", round(true.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("False positive rate: ", round(false.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("False negative rate: ", round(false.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("At a threshold of ", threshold,
",\nwe would inspect the homes of\n",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")]),
" children, \nand would find that ",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]),
"\nof them have BLL > 5.\n"))
cat(paste0("AUC: ", area.under.curve))
if(show.truth){
cat(paste0("\n"))
print(truth.table)
print(prop.table(truth.table, 1)*100)
}
}else{
if(!is.null(threshold)){
############ THRESHOLD
test.data$g5.predicted <- ifelse(x > threshold, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
}
truth.table <- table(test.data$g5.predicted, test.data$g5.observed)
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")])
false.positives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")])
false.negatives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")])
true.negatives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
false.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
true.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
false.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
true.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
cat(paste0("Sensitivity: ", round(sensitivity, digits=2)), "\n")
cat(paste0("Specificity: ", round(specificity, digits=2)), "\n\n")
cat(paste0("PPV: ", round(ppv, digits=2)), "\n")
cat(paste0("NPV: ", round(npv, digits =2)), "\n\n")
cat(paste0("True positive rate: ", round(true.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("True negative rate: ", round(true.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("False positive rate: ", round(false.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("False negative rate: ", round(false.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("At a threshold of ", threshold,
",\nwe would inspect the homes of\n",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")]),
" children, \nand would find that ",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]),
"\nof them have BLL > 5.\n"))
cat(paste0("AUC: ", area.under.curve))
if(show.truth){
cat(paste0("\n"))
print(truth.table)
print(prop.table(truth.table, 1)*100)
}
############## \ THRESHOLD
}
### <PLOT>> ####################################
if(plot){
plot(0:1, 0:1,
xlab = "False positive rate",
ylab = "True positive rate",
type="n",
xlim=if(text){wide.lim}else{c(0,1)},
ylim=if(text){wide.lim}else{c(0,1)},
xaxt="n",
yaxt="n")
axis(side = 1,
at = seq(0,1, 0.2),
labels = seq(0, 1, 0.2))
axis(side = 2,
at = seq(0,1, 0.2),
labels = seq(0, 1, 0.2),
las = 1)
l.col <- adjustcolor("black", alpha.f=0.4)
lines(0:1, 0:1, col=adjustcolor("black", alpha.f=0.5),
lwd=3)
lines(c(0,0),
c(0,1), col = l.col)
lines(c(0,1),
c(0,0), col = l.col)
lines(c(1,1),
c(0,1), col = l.col)
lines(c(0,1),
c(1,1), col = l.col)
if(label.points == FALSE){
points(x = 1 - specificity,
y = sensitivity,
pch=20,
col=adjustcolor("darkblue", alpha.f=0.6))
}
### <NO THRESHOLD>
if(type == "cont"){
if(text){
text(x = 1 - specificity,
y = sensitivity,
labels = paste0(seq.vec[cutoff]),
cex=cex,
col=adjustcolor("black", alpha.f=0.6),
pos=4)
} else{
points(x = 1 - specificity,
y = sensitivity,
cex=cex,
col=adjustcolor("darkred", alpha.f=0.9),
pch=16)
}
} else{
if(text){
text(x = 1 - specificity,
y = sensitivity,
labels = paste0(seq.vec[cutoff]),
cex=cex,
col=adjustcolor("black", alpha.f=0.6),
pos=4)
} else{
points(x = 1 - specificity,
y = sensitivity,
cex=cex,
col=adjustcolor("darkred", alpha.f=0.9),
pch=16)
}
}
}
}
names(mod.gam1)
joe.colors <- colorRampPalette(brewer.pal(9, "YlOrRd"))
library(RColorBrewer)
joe.colors <- colorRampPalette(brewer.pal(9, "YlOrRd"))
brewer.pal(9, "YlOrRd")
pal <- joe.colors(5)
pal
load("c:/users/brewjr/documents/dssg/exploration9done.RData")
load("c:/users/brewjr/documents/buildings/build.RData")
load("c:/users/brewjr/documents/dssg/buildings/build.RData")
# PREDICTED - JOE'S MODEL
library(mgcv)
b2$predicted <- predict(g10.10, b2, type="response", na.action = na.pass)
# NOW MAKE A predicted_better AS IF WE HAD BIRTH DATA
b2$age.kid <- runif(n = nrow(b2),
min = 0,
max = 27375)
b2$race <- sample(x=j.df$race[which(!is.na(j.df$race))],
size=nrow(b2),
replace=TRUE)
b2$predicted_better <- predict(g10.10, b2, type="response", na.action = na.pass)
summary(b2)
b2$type[1:20]
# CLEAN OUT REPEATED ROWS
b <- b[which(b$BLDG_ID != 0 & b$BLDG_ID != 882804),]
b2 <- b
rm(b)
rm(b, b2_races)
b2$age.kid <- 600
b2$type <- "V"
b2$day.num <- 200
b2$cond <- factor(ifelse(b2$BLDG_CONDI == "NEEDS MINOR REPAIR",
"soso",
ifelse(b2$BLDG_CONDI == "SOUND",
"good",
"bad")),
levels=c("good", "soso", "bad"))
b2$season <- factor("summer")
b2$race <- "black"
# PREDICTED - JOE'S MODEL
library(mgcv)
b2$predicted <- predict(g10.10, b2, type="response", na.action = na.pass)
library(mgcv)
b2$predicted <- predict(g10.10, b2, type="response", na.action = na.pass)
str(b2)
b2$type <- factor("V")
b2$race <- factor("black")
b2$predicted <- predict(g10.10, b2, type="response", na.action = na.pass)
str(b2)
b2$predicted <- predict(g10.10, b2, type="response", na.action = na.pass)
summary(g10.10)
library(mgcv)
load("c:/users/brewjr/documents/dssg/exploration9done.RData")
load("c:/users/brewjr/documents/dssg/buildings/build.RData")
# ADD A BUNCH OF PERSON VARS TO B
b2$age.kid <- 600
b2$type <- factor("V")
b2$day.num <- 200
b2$cond <- factor(ifelse(b2$BLDG_CONDI == "NEEDS MINOR REPAIR",
"soso",
ifelse(b2$BLDG_CONDI == "SOUND",
"good",
"bad")),
levels=c("good", "soso", "bad"))
b2$season <- factor("summer")
b2$race <- factor("black")
# PREDICTED - JOE'S MODEL
b2$predicted <- predict(g10.10, b2, type="response", na.action = na.pass)
summary(b2$cond)
summary(b2$race)
summary(b2$type)
names(b3)
547*500
setwd("C:/Users/benbrew/Documents/workingdirectory/assignment3")
setwd("E:/fun/ben_learning") #on joe's computer
#setwd("C:/Users/benbrew/Documents/workingdirectory/assignment3")
##########
# READ IN FLORIDA DATA ON LOW BIRTH WEIGHT, POPULATION CHARACTERISTICS
##########
dat <- read.csv("lbw.csv")
dat$percent_lbw <- (dat$lbw_births/dat$live_births)*100
##########
# 2. Make a column called percent_black - this should be the percentage of each county's residents which are black
##########
dat$percent_black <- (dat$black/dat$total_pop)*100
##########
# 3.  Make a column called percent_white - this should be the percentage of each county's residents which are white
##########
dat$percent_white<- (dat$white/dat$total_pop)*100
##########
# 4. Make a column called percent_other - this should be the percentage of each county's residents which are white
##########
dat$percent_other <- (dat$other/dat$total_pop)*100
hist(dat$percent_black, col="red", xlab="Percent African American",
main="Distribution of African American Population As a Percentage
of the Total Population", xlim=c(0,60))
hist(dat$percent_white, col="red", xlab="Percent White",
main="Distribution of White Population as a
Percentage of the Total Population",
xlim=c(0,100))
#Historgram of the poverty rate.
hist(dat$percent_other, col="red", xlab="Poverty Rate",
main="Distribution of the Poverty Rate", xlim=c(0,10))
plot(dat$percent_black, dat$percent_lbw,
main="Low Birth Weight Among African Americans",
ylab="Low Birth Weight", xlab="Percent African American", pch=16, col="blue",
xlim=c(0,60), ylim=c(0,15))
plot(dat$percent_white, dat$percent_lbw,
main="Low Birth Weight Among Whites",
ylab="Low Birth Weight", xlab="Percent White", pch=16, col="blue",
xlim=c(0,100), ylim=c(0,15))
abline(lm(dat$percent_lbw~dat$percent_white))
plot of chunk unnamed-chunk-1
plot(dat$percent_other, dat$percent_lbw,
main="Low Birth Weight Among Other Races",
ylab="Low Birth Weight", xlab="Percent OtherRaces ", pch=16, col="blue",
xlim=c(0,20), ylim=c(0,15))
abline(lm(dat$percent_lbw~dat$percent_other))
plot of chunk unnamed-chunk-1
plot(dat$percent_poverty, dat$percent_lbw,
main="Low Birth Weight Among Lower Incomes",
ylab="Low Birth Weight", xlab="Poverty Rate", pch=16, col="blue",
xlim=c(0,40), ylim=c(0,15))
abline(lm(dat$percent_lbw~dat$percent_poverty))
plot of chunk unnamed-chunk-1
lm1<- lm(dat$percent_lbw ~ dat$percent_black)
summary(lm1)
lm2 <- lm(dat$percent_lbw ~ dat$percent_poverty)
summary(lm2)
lm3 <- lm(dat$percent_lbw ~ dat$percent_black + dat$percent_poverty)
summary(lm3)
cor(dat$percent_poverty,dat$percent_black)
lm4 <- lm(dat$percent_poverty ~ dat$percent_black)
summary(lm4)
library(rgl)
## Warning: package 'rgl' was built under R version 3.0.3
library(car)
library(scatterplot3d)
## Warning: package 'scatterplot3d' was built under R version 3.0.2
scatter3d(dat$percent_lbw ~ dat$percent_poverty + dat$percent_black,
fit="linear",
ylab="Low Birth Weight", xlab="Poverty", zlab="Black")
plot(dat$percent_black, dat$percent_lbw,
main="Low Birth Weight Among African Americans",
ylab="Low Birth Weight", xlab="Percent African American", pch=16, col="blue",
xlim=c(0,60), ylim=c(0,15))
abline(lm(dat$percent_lbw~dat$percent_black))
names(dat)
plot(dat$percent_black, dat$percent_lbw,
main="Low Birth Weight Among African Americans",
ylab="Low Birth Weight", xlab="Percent African American", pch=16, col="blue",
xlim=c(0,60), ylim=c(0,15),
cex=dat$total_pop/50000)
plot(dat$percent_black, dat$percent_lbw,
main="Low Birth Weight Among African Americans",
ylab="Low Birth Weight", xlab="Percent African American", pch=16, col="blue",
xlim=c(0,60), ylim=c(0,15),
cex=dat$total_pop/500000)
dat$color_african <- colorRampPalette(brewer.pal(12, "Blues"))(nrow(dat))
library(RColorBrewer)
dat$color_african <- colorRampPalette(brewer.pal(12, "Blues"))(nrow(dat))
dat$color_african <- colorRampPalette(brewer.pal(9, "Blues"))(nrow(dat))
plot(dat$percent_black, dat$percent_lbw,
main="Low Birth Weight Among African Americans",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=dat$color_african,
xlim=c(0,60), ylim=c(0,15),
cex=dat$total_pop/500000)
dat$color_african <- colorRampPalette("Blues")(nrow(dat))
dat$color_african <- colorRampPalette(c("blue", "red"))(nrow(dat))
plot(dat$percent_black, dat$percent_lbw,
main="Low Birth Weight Among African Americans",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=dat$color_african,
xlim=c(0,60), ylim=c(0,15),
cex=dat$total_pop/500000)
plot(dat$percent_black, dat$percent_lbw,
main="Low Birth Weight Among African Americans",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=dat$total_pop/500000)
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=dat$total_pop/500000)
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3))
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=sqrt(dat$total_pop/50000))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=sqrt(dat$total_pop/100000))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=sqrt(dat$total_pop/1000000))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=(dat$total_pop/1000000)^(1/3))
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=(dat$total_pop/1000000)^(1/2))
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=(dat$total_pop/100000)^(1/2))
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=(dat$total_pop/100000)^(1/3))
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
xlim=c(0,60), ylim=c(0,15),
cex=(dat$total_pop/100000)^(1/4))
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.2),
cex=(dat$total_pop/100000)^(1/4))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.5),
cex=(dat$total_pop/100000)^(1/4))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
cex=(dat$total_pop/100000)^(1/4))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
my_colors <- colorRampPalette(c("blue", "red"))(100)
dat$color_african <- my_colors[ceiling(dat$percent_african]
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_african, alpha.f=0.3),
cex=(dat$total_pop/100000)^(1/4))
my_colors <- colorRampPalette(c("blue", "red"))(100)
dat$color_african <- my_colors[ceiling(dat$percent_african)]
my_colors <- colorRampPalette(c("blue", "red"))(100)
my_colors <- colorRampPalette(c("blue", "red"))(100)
dat$color_african <- my_colors[ceiling(dat$percent_african)]
my_colors
ceiling(dat$percent_african)
head(dat)
my_colors <- colorRampPalette(c("blue", "red"))(100)
dat$color_black <- my_colors[ceiling(dat$percent_black)]
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_black, alpha.f=0.3),
cex=(dat$total_pop/100000)^(1/4))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
hist(dat$percent_black)
my_colors <- colorRampPalette(c("blue", "red"))(60)
dat$color_black <- my_colors[ceiling(dat$percent_black)]
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_black, alpha.f=0.3),
cex=(dat$total_pop/100000)^(1/4))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_black, alpha.f=0.3),
cex=(dat$total_pop/100000)^(1/3))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
plot(dat$percent_poverty, dat$percent_lbw,
main="Correlation between Poverty and LBW",
ylab="Low Birth Weight", xlab="Percent African American",
pch=16, col=adjustcolor(dat$color_black, alpha.f=0.3),
cex=(dat$total_pop/10000)^(1/3))
abline(lm(dat$percent_lbw~dat$percent_black),
col=adjustcolor("black", alpha.f=0.3), lwd=3)
