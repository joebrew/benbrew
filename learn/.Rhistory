# MAKE A FOLDER IN YOUR WORKINGDIRECTORY NAMED assignment3
##########
# SET WORKING DIRECTORY
##########
if ( Sys.info()["sysname"] == "Linux" ){
setwd("/home/joebrew/Documents/benbrew/learn")
} else {
setwd("C:/Users/BrewJR/Documents/benbrew/learn")
}
##########
# READ IN FLORIDA DATA ON LOW BIRTH WEIGHT, POPULATION CHARACTERISTICS
##########
dat <- read.csv("lbw.csv")
dat <- read.csv("/home/joebrew/Documents/benbrew/learn/lbw.csv")
dat$percent_lbw <- (dat$lbw_births/dat$live_births)*100
##########
# 2. Make a column called percent_black - this should be the percentage of each county's residents which are black
##########
dat$percent_black <- (dat$black/dat$total_pop)*100
##########
# 3.  Make a column called percent_white - this should be the percentage of each county's residents which are white
##########
dat$percent_white<- (dat$white/dat$total_pop)*100
##########
# 4. Make a column called percent_other - this should be the percentage of each county's residents which are white
##########
dat$percent_other <- (dat$other/dat$total_pop)*100
##########
head(dat)
library(maps)
mymap <- map("county", "fl")
mymap$names
dat
dat$county <- tolower(dat$county)
dat$county
mymap$names <- gsub("florida," "", mymap$names)
mymap$names <- gsub("florida," ,"", mymap$names)
mymap$names
mymap$names <- gsub(":main|:spit," ,"", mymap$names)
dat$county
library(car)
library(maps)
mymap <- map("county", "fl")
mymap$names <- gsub("florida," ,"", mymap$names)
mymap$names <- gsub(":main|:spit," ,"", mymap$names)
library(car)
mymap$names <- Recode(mymap$names,
"'de soto' = 'desoto';
'st johns' = 'st. johns';
'st lucie' = 'st. lucie'")
mymap$names
mymap$names <- gsub(":main|:spit" ,"", mymap$names)
library(maps)
mymap <- map("county", "fl")
mymap$names <- gsub("florida," ,"", mymap$names)
mymap$names <- gsub(":main|:spit" ,"", mymap$names)
library(car)
mymap$names <- Recode(mymap$names,
"'de soto' = 'desoto';
'st johns' = 'st. johns';
'st lucie' = 'st. lucie'")
mymap$names
unique(mymap$names) == unique(dat$county)
dat$county
cbind(mymap$names, dat$county)
cbind(unique(mymap$names), unique(dat$county))
str(mymap$names)
str(dat$county)
cbind(unique(mymap$names), unique(dat$county))
unique(sort(mymap$names)) == unique(sort(dat$county))
fl <- readOGR("/home/joebrew/Documents/uf/phc6194/hw8/", "hw8")
library(rgdal)
fl <- readOGR("/home/joebrew/Documents/uf/phc6194/hw8/", "hw8")
boundary <- unionSpatialPolygons(fl, rep(1, length(fl@polygons)))
library(maptools)
boundary <- unionSpatialPolygons(fl, rep(1, length(fl@polygons)))
plot(boundary)
# Code for compass rose
#(from http://r-sig-geo.2731867.n2.nabble.com/How-to-diplasy-a-compass-rose-on-a-map-td4509034.html)
compassRose<-function(x,y,rot=0,cex=1) {
oldcex<-par(cex=cex)
mheight<-strheight("M")
xylim<-par("usr")
plotdim<-par("pin")
xmult<-(xylim[2]-xylim[1])/(xylim[4]-xylim[3])*plotdim[2]/plotdim[1]
point.angles<-seq(0,7*pi/4,by=pi/4)+pi*rot/180
crspans<-rep(c(mheight*3,mheight/2),4)
xpoints<-cos(point.angles)*crspans*xmult+x
ypoints<-sin(point.angles)*crspans+y
polygon(xpoints,ypoints)
txtxpoints<-cos(point.angles[c(1,3,5,7)])*1.33*crspans[1]*xmult+x
txtypoints<-sin(point.angles[c(1,3,5,7)])*1.33*crspans[1]+y
text(txtxpoints,txtypoints,c("E","N","W","S"))
par(oldcex)
}
library(RColorBrewer)
library(classInt)
TractFun <- function(var,
color = "Blues",
style = "equal", # or equal/quantile
nclr = 8,
title = NA,
dataPrecision = 0){
plotclr <- brewer.pal(nclr, color)
class <- classIntervals(var, nclr, style = style, dataPrecision=dataPrecision) #use "equal" instead
#class <- classIntervals(0:100, nclr, style="equal")
colcode <- findColours(class, plotclr)
legcode <- paste0(gsub(",", " - ", gsub("[[]|[]]|[)]", "", names(attr(colcode, "table")))))
plot(fl, border=NA, col=colcode)
plot(boundary, add = TRUE)
legend("left", # position
legend = legcode, #names(attr(colcode, "table")),
fill = attr(colcode, "palette"),
cex = 0.6,
border=NA,
bty = "n",
title = title)
compassRose(x = -80.5 ,y = 30,rot=0,cex=0.25)
}
TractFun <- function(var,
color = "Blues",
style = "equal", # or equal/quantile
nclr = 8,
title = NA,
dataPrecision = 0){
plotclr <- brewer.pal(nclr, color)
class <- classIntervals(var, nclr, style = style, dataPrecision=dataPrecision) #use "equal" instead
#class <- classIntervals(0:100, nclr, style="equal")
colcode <- findColours(class, plotclr)
legcode <- paste0(gsub(",", " - ", gsub("[[]|[]]|[)]", "", names(attr(colcode, "table")))))
plot(mymap, border=NA, col=colcode)
plot(boundary, add = TRUE)
legend("left", # position
legend = legcode, #names(attr(colcode, "table")),
fill = attr(colcode, "palette"),
cex = 0.6,
border=NA,
bty = "n",
title = title)
compassRose(x = -80.5 ,y = 30,rot=0,cex=0.25)
}
TractFun(dat$lbw_percent)
head(dat)
TractFun(dat$percent_lbw)
plot(mymap, border=NA, fill = TRUE, col=colcode)
TractFun(dat$percent_lbw)
library(classInt)
TractFun <- function(var,
color = "Blues",
style = "equal", # or equal/quantile
nclr = 8,
title = NA,
dataPrecision = 0){
plotclr <- brewer.pal(nclr, color)
class <- classIntervals(var, nclr, style = style, dataPrecision=dataPrecision) #use "equal" instead
#class <- classIntervals(0:100, nclr, style="equal")
colcode <- findColours(class, plotclr)
legcode <- paste0(gsub(",", " - ", gsub("[[]|[]]|[)]", "", names(attr(colcode, "table")))))
plot(mymap, border=NA, fill = TRUE, col=colcode)
plot(boundary, add = TRUE)
legend("left", # position
legend = legcode, #names(attr(colcode, "table")),
fill = attr(colcode, "palette"),
cex = 0.6,
border=NA,
bty = "n",
title = title)
compassRose(x = -80.5 ,y = 30,rot=0,cex=0.25)
}
TractFun(dat$percent_lbw)
warnings()
plot(mymap, fill = T, col = "red")
map("county", "fl", border=NA, fill = TRUE, col=colcode)
library(classInt)
TractFun <- function(var,
color = "Blues",
style = "equal", # or equal/quantile
nclr = 8,
title = NA,
dataPrecision = 0){
plotclr <- brewer.pal(nclr, color)
class <- classIntervals(var, nclr, style = style, dataPrecision=dataPrecision) #use "equal" instead
#class <- classIntervals(0:100, nclr, style="equal")
colcode <- findColours(class, plotclr)
legcode <- paste0(gsub(",", " - ", gsub("[[]|[]]|[)]", "", names(attr(colcode, "table")))))
map("county", "fl", border=NA, fill = TRUE, col=colcode)
plot(boundary, add = TRUE)
legend("left", # position
legend = legcode, #names(attr(colcode, "table")),
fill = attr(colcode, "palette"),
cex = 0.6,
border=NA,
bty = "n",
title = title)
compassRose(x = -80.5 ,y = 30,rot=0,cex=0.25)
}
TractFun(dat$percent_lbw)
TractFun <- function(var,
color = "Blues",
style = "equal", # or equal/quantile
nclr = 8,
title = NA,
dataPrecision = 1){
plotclr <- brewer.pal(nclr, color)
class <- classIntervals(var, nclr, style = style, dataPrecision=dataPrecision) #use "equal" instead
#class <- classIntervals(0:100, nclr, style="equal")
colcode <- findColours(class, plotclr)
legcode <- paste0(gsub(",", " - ", gsub("[[]|[]]|[)]", "", names(attr(colcode, "table")))))
map("county", "fl", border=NA, fill = TRUE, col=colcode)
plot(boundary, add = TRUE)
legend("left", # position
legend = legcode, #names(attr(colcode, "table")),
fill = attr(colcode, "palette"),
cex = 0.6,
border=NA,
bty = "n",
title = title)
compassRose(x = -80.5 ,y = 30,rot=0,cex=0.25)
}
TractFun(dat$percent_lbw)
mymap <- map("county", "fl", plot = FALSE)
TractFun(dat$percent_lbw)
title(main = "Percent LBW by county")
